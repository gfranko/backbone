(function(){var a=Backbone.Collection=function(a,b){b||(b={}),b.model&&(this.model=b.model),b.comparator!==void 0&&(this.comparator=b.comparator),this._reset(),this.initialize.apply(this,arguments),a&&(b.parse&&(a=this.parse(a)),this.reset(a,{silent:!0,parse:b.parse}))};_.extend(a.prototype,Backbone.Events,{model:Backbone.Model,initialize:function(){},toJSON:function(a){return this.map(function(b){return b.toJSON(a)})},sync:function(){return Backbone.sync.apply(this,arguments)},add:function(a,b){var c,d,e,f,g,h,i={},j={},k=[];b||(b={}),a=_.isArray(a)?a.slice():[a];for(c=0,e=a.length;c<e;c++){if(!(f=a[c]=this._prepareModel(a[c],b)))throw new Error("Can't add an invalid model to a collection");g=f.cid,h=f.id;if(i[g]||this._byCid[g]||h!=null&&(j[h]||this._byId[h])){k.push(c);continue}i[g]=j[h]=f}c=k.length;while(c--)k[c]=a.splice(k[c],1)[0];for(c=0,e=a.length;c<e;c++)(f=a[c]).on("all",this._onModelEvent,this),this._byCid[f.cid]=f,f.id!=null&&(this._byId[f.id]=f);this.length+=e,d=b.at!=null?b.at:this.models.length,Backbone.localProps.splice.apply(this.models,[d,0].concat(a));if(b.merge)for(c=0,e=k.length;c<e;c++)(f=this._byId[k[c].id])&&f.set(k[c],b);this.comparator&&b.at==null&&this.sort({silent:!0});if(b.silent)return this;for(c=0,e=this.models.length;c<e;c++){if(!i[(f=this.models[c]).cid])continue;b.index=c,f.trigger("add",f,this,b)}return this},remove:function(a,b){var c,d,e,f;b||(b={}),a=_.isArray(a)?a.slice():[a];for(c=0,d=a.length;c<d;c++){f=this.getByCid(a[c])||this.get(a[c]);if(!f)continue;delete this._byId[f.id],delete this._byCid[f.cid],e=this.indexOf(f),this.models.splice(e,1),this.length--,b.silent||(b.index=e,f.trigger("remove",f,this,b)),this._removeReference(f)}return this},push:function(a,b){return a=this._prepareModel(a,b),this.add(a,b),a},pop:function(a){var b=this.at(this.length-1);return this.remove(b,a),b},unshift:function(a,b){return a=this._prepareModel(a,b),this.add(a,_.extend({at:0},b)),a},shift:function(a){var b=this.at(0);return this.remove(b,a),b},slice:function(a,b){return this.models.slice(a,b)},get:function(a){return a==null?void 0:this._byId[a.id!=null?a.id:a]},getByCid:function(a){return a&&this._byCid[a.cid||a]},at:function(a){return this.models[a]},where:function(a){return _.isEmpty(a)?[]:this.filter(function(b){for(var c in a)if(a[c]!==b.get(c))return!1;return!0})},sort:function(a){a||(a={});if(!this.comparator)throw new Error("Cannot sort a set without a comparator");var b=_.bind(this.comparator,this);return this.comparator.length===1?this.models=this.sortBy(b):this.models.sort(b),a.silent||this.trigger("reset",this,a),this},pluck:function(a){return _.map(this.models,function(b){return b.get(a)})},reset:function(a,b){a||(a=[]),b||(b={});for(var c=0,d=this.models.length;c<d;c++)this._removeReference(this.models[c]);return this._reset(),this.add(a,_.extend({silent:!0},b)),b.silent||this.trigger("reset",this,b),this},fetch:function(a){a=a?_.clone(a):{},a.parse===void 0&&(a.parse=!0);var b=this,c=a.success;return a.success=function(d,e,f){b[a.add?"add":"reset"](b.parse(d,f),a),c&&c(b,d,a)},this.sync("read",this,a)},create:function(a,b){var c=this;b=b?_.clone(b):{},a=this._prepareModel(a,b);if(!a)return!1;b.wait||c.add(a,b);var d=b.success;return b.success=function(a,b,e){e.wait&&c.add(a,e),d&&d(a,b,e)},a.save(null,b),a},parse:function(a,b){return a},clone:function(){return new this.constructor(this.models)},chain:function(){return _(this.models).chain()},_reset:function(a){this.length=0,this.models=[],this._byId={},this._byCid={}},_prepareModel:function(a,b){if(a instanceof Backbone.Model)return a.collection||(a.collection=this),a;b||(b={}),b.collection=this;var c=new this.model(a,b);return c._validate(c.attributes,b)?c:!1},_removeReference:function(a){this===a.collection&&delete a.collection,a.off("all",this._onModelEvent,this)},_onModelEvent:function(a,b,c,d){if(a!=="add"&&a!=="remove"||c===this)a==="destroy"&&this.remove(b,d),b&&a==="change:"+b.idAttribute&&(delete this._byId[b.previous(b.idAttribute)],b.id!=null&&(this._byId[b.id]=b)),this.trigger.apply(this,arguments);else return}});var b=["forEach","each","map","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","max","min","sortBy","sortedIndex","toArray","size","first","head","take","initial","rest","tail","last","without","indexOf","shuffle","lastIndexOf","isEmpty","groupBy"];_.each(b,function(b){a.prototype[b]=function(){var a=Backbone.localProps.slice.call(arguments);return a.unshift(this.models),_[b].apply(_,a)}}),a.extend=Backbone.extend}).call(this);